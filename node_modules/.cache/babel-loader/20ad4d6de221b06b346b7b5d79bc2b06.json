{"ast":null,"code":"var _jsxFileName = \"/home/user/Documentos/chronometer/src/components/Stopwatch.js\";\nimport React from 'react';\nimport StopwatchButton from './StopwatchButton.js';\nimport StopwatchDisplay from \"./StopwatchDisplay.js\";\nimport StopwatchControls from './StopwatchControls.js';\n\nclass Stopwatch extends React.Component {\n  constructor() {\n    super();\n\n    this.startWatch = () => {\n      this.intervalHandler = setInterval(() => {\n        const time = this.state.time + 100;\n        this.setState({\n          time: time\n        });\n      }, 100);\n      this.setState({\n        status: 'running'\n      });\n    };\n\n    this.resetWatch = () => {\n      const status = this.state.status === 'paused' ? 'idle' : 'running';\n      const time = 0;\n      this.setState({\n        time: time,\n        status\n      });\n    };\n\n    this.pausedWatch = () => {\n      clearInterval(this.intervalHandler);\n      this.setState({\n        status: 'paused'\n      });\n    };\n\n    this.state = {\n      time: 0,\n      status: 'idle'\n    };\n  }\n\n  render() {\n    const {\n      time,\n      status\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(StopwatchDisplay, {\n      time: time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(StopwatchControls, {\n      onStartWatch: this.startWatch,\n      status: status,\n      onResetWatch: this.resetWatch,\n      onPauseWatch: this.pausedWatch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Stopwatch;","map":{"version":3,"sources":["/home/user/Documentos/chronometer/src/components/Stopwatch.js"],"names":["React","StopwatchButton","StopwatchDisplay","StopwatchControls","Stopwatch","Component","constructor","startWatch","intervalHandler","setInterval","time","state","setState","status","resetWatch","pausedWatch","clearInterval","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAuC;AACnCC,EAAAA,WAAW,GAAE;AACD;;AADC,SAWLC,UAXK,GAWO,MAAM;AAEf,WAAKC,eAAL,GAAuBC,WAAW,CAAC,MAAI;AAClC,cAAMC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAX,GAAkB,GAA/B;AACA,aAAKE,QAAL,CAAc;AACVF,UAAAA,IAAI,EAAEA;AADI,SAAd;AAGH,OALgC,EAK/B,GAL+B,CAAlC;AAOC,WAAKE,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAE;AADE,OAAd;AAGH,KAvBI;;AAAA,SAyBLC,UAzBK,GAyBQ,MAAM;AACf,YAAMD,MAAM,GAAG,KAAKF,KAAL,CAAWE,MAAX,KAAsB,QAAtB,GAAiC,MAAjC,GAA0C,SAAzD;AACA,YAAMH,IAAI,GAAE,CAAZ;AACI,WAAKE,QAAL,CAAc;AACVF,QAAAA,IAAI,EAAEA,IADI;AAEVG,QAAAA;AAFU,OAAd;AAIP,KAhCI;;AAAA,SAkCLE,WAlCK,GAkCS,MAAM;AAChBC,MAAAA,aAAa,CAAC,KAAKR,eAAN,CAAb;AACA,WAAKI,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAE;AADE,OAAd;AAGH,KAvCI;;AAED,SAAKF,KAAL,GAAY;AACRD,MAAAA,IAAI,EAAE,CADE;AAERG,MAAAA,MAAM,EAAE;AAFA,KAAZ;AAOH;;AAgCTI,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACP,MAAAA,IAAD;AAAMG,MAAAA;AAAN,QAAgB,KAAKF,KAA3B;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,gBAAD;AAAkB,MAAA,IAAI,EAAID,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAEH,oBAAC,iBAAD;AAAmB,MAAA,YAAY,EAAI,KAAKH,UAAxC;AAAoD,MAAA,MAAM,EAAEM,MAA5D;AAAoE,MAAA,YAAY,EAAI,KAAKC,UAAzF;AAAqG,MAAA,YAAY,EAAE,KAAKC,WAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFG,CAAP;AAKH;;AAjDkC;;AAqDvC,eAAeX,SAAf","sourcesContent":["import React from 'react';\nimport StopwatchButton from './StopwatchButton.js'\nimport StopwatchDisplay from \"./StopwatchDisplay.js\"\nimport StopwatchControls from './StopwatchControls.js';\n\nclass Stopwatch extends React.Component{\n    constructor(){\n                super()\n                this.state ={\n                    time: 0,\n                    status: 'idle'\n                }\n\n\n\n            }\n\n            startWatch= () => {\n\n               this.intervalHandler = setInterval(()=>{\n                    const time = this.state.time + 100\n                    this.setState({\n                        time: time\n                    })\n                },100)\n\n                this.setState({\n                    status: 'running'\n                });\n            }\n\n            resetWatch = () => {\n                const status = this.state.status === 'paused' ? 'idle' : 'running';\n                const time =0\n                    this.setState({\n                        time: time,\n                        status\n                    })\n            }\n\n            pausedWatch = () => {\n                clearInterval(this.intervalHandler)\n                this.setState({\n                    status: 'paused'\n                });\n            }\n\n    render(){\n        const {time,status} = this.state;\n        return(<div>\n            <StopwatchDisplay time = {time}/>\n            <StopwatchControls onStartWatch = {this.startWatch} status={status} onResetWatch = {this.resetWatch} onPauseWatch={this.pausedWatch}/>\n\n        </div>)\n    }\n\n}\n\nexport default Stopwatch;\n"]},"metadata":{},"sourceType":"module"}